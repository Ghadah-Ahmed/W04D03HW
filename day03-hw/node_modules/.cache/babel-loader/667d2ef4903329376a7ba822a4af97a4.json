{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\T1000\\\\codes\\\\Week04\\\\Day03\\\\W04D03HW\\\\day03-hw\\\\src\\\\component\\\\Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; //class Todo extends React.Component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo() {\n  _s();\n\n  const [inputList, setInputList] = useState([{\n    firstName: \"\"\n  }]);\n\n  const handleInputChange = (e, index) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const list = [...inputList];\n    list[index][name] = value;\n    setInputList(list);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 8\n    }, this), inputList.map((x, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"What needs to be done ?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"firstName\",\n            value: x.firstName,\n            placeholder: \"\",\n            onChange: e => handleInputChange(e, i)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-box\",\n          children: [inputList.length !== 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"mr10\",\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 42\n          }, this), inputList.length - 1 === i && /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 20\n      },\n      children: JSON.stringify(inputList)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Todo, \"v85kZ+PVrzh/5vMB4dRWNvLjzWY=\");\n\n_c = Todo;\nexport default Todo; // const [inputList ,setInputList]=useState({do1:'Enter your work ..'})\n//     return (\n//         <div className=\"App\">\n//         <h3> HomeWork</h3>\n//         <form className=\"box\">\n//           <h2>TODO</h2>\n//           {/* function  */}\n//           <label>\n//             What needs to be done ?\n//             <br />\n//             <br />\n//         <input type=\"text\"\n//         name='do1' \n//         className='Input'\n//         value={inputList.do1}\n//         />\n//           </label>\n//          <div className='btn-box'> \n//          <input type='button'\n//                 value='Delete'\n//                 className='Input'\n//                 />\n//          <input type='button'value='Add'/>\n//          </div>\n//         </form>\n//       </div>\n//     )\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["C:/Users/DELL/Desktop/T1000/codes/Week04/Day03/W04D03HW/day03-hw/src/component/Todo.js"],"names":["React","useState","Todo","inputList","setInputList","firstName","handleInputChange","e","index","name","value","target","list","map","x","i","length","marginTop","JSON","stringify"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;;;;AACC,SAASC,IAAT,GAAe;AAAA;;AAEd,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,CAAC;AAAEI,IAAAA,SAAS,EAAE;AAAb,GAAD,CAAD,CAA1C;;AAGA,QAAMC,iBAAiB,GAAG,CAACC,CAAD,EAAIC,KAAJ,KAAc;AACtC,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBH,CAAC,CAACI,MAA1B;AACA,UAAMC,IAAI,GAAG,CAAC,GAAGT,SAAJ,CAAb;AACAS,IAAAA,IAAI,CAACJ,KAAD,CAAJ,CAAYC,IAAZ,IAAoBC,KAApB;AACAN,IAAAA,YAAY,CAACQ,IAAD,CAAZ;AACD,GALD;;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFH,EAGGT,SAAS,CAACU,GAAV,CAAc,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACvB,0BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCAEA;AAAA,6DAEH;AAAA;AAAA;AAAA;AAAA,kBAFG,eAGH;AAAA;AAAA;AAAA;AAAA,kBAHG,eAIE;AACE,YAAA,IAAI,EAAC,WADP;AAEE,YAAA,KAAK,EAAED,CAAC,CAACT,SAFX;AAGE,YAAA,WAAW,EAAC,EAHd;AAIE,YAAA,QAAQ,EAAEE,CAAC,IAAKD,iBAAiB,CAACC,CAAD,EAAGQ,CAAH;AAJnC;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAaE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,qBACGZ,SAAS,CAACa,MAAV,KAAqB,CAArB,iBAA0B;AAAQ,YAAA,SAAS,EAAC,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAD7B,EAEGb,SAAS,CAACa,MAAV,GAAmB,CAAnB,KAAyBD,CAAzB,iBAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFjC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAoBD,KArBA,CAHH,eAyBE;AAAK,MAAA,KAAK,EAAE;AAAEE,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA,gBAAgCC,IAAI,CAACC,SAAL,CAAehB,SAAf;AAAhC;AAAA;AAAA;AAAA;AAAA,YAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD;;GA3CSD,I;;KAAAA,I;AA+CV,eAAeA,IAAf,C,CAEA;AAMA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useState } from \"react\";\r\n\r\n//class Todo extends React.Component\r\n function Todo(){\r\n\r\n  const [inputList, setInputList] = useState([{ firstName: \"\" }]);\r\n \r\n\r\n  const handleInputChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const list = [...inputList];\r\n    list[index][name] = value;\r\n    setInputList(list);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      \r\n       <h3>Todo</h3>\r\n      {inputList.map((x, i) => {\r\n        return (\r\n          <div className=\"box\">\r\n\r\n          <label>\r\n           What needs to be done ?\r\n       <br />\r\n       <br />\r\n            <input\r\n              name=\"firstName\"\r\n              value={x.firstName}\r\n              placeholder=''\r\n              onChange={e =>  handleInputChange(e,i)}\r\n            />\r\n            </label>\r\n            <div className=\"btn-box\">\r\n              {inputList.length !== 1 && <button className=\"mr10\">Remove</button>}\r\n              {inputList.length - 1 === i && <button>Add</button>}\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n      <div style={{ marginTop: 20 }}>{JSON.stringify(inputList)}</div>\r\n    </div>\r\n  );\r\n}\r\n     \r\n  \r\n\r\nexport default Todo;\r\n\r\n// const [inputList ,setInputList]=useState({do1:'Enter your work ..'})\r\n\r\n\r\n\r\n     \r\n        \r\n//     return (\r\n//         <div className=\"App\">\r\n\r\n//         <h3> HomeWork</h3>\r\n\r\n//         <form className=\"box\">\r\n//           <h2>TODO</h2>\r\n\r\n//           {/* function  */}\r\n\r\n//           <label>\r\n//             What needs to be done ?\r\n//             <br />\r\n//             <br />\r\n//         <input type=\"text\"\r\n//         name='do1' \r\n//         className='Input'\r\n//         value={inputList.do1}\r\n//         />\r\n         \r\n//           </label>\r\n          \r\n//          <div className='btn-box'> \r\n//          <input type='button'\r\n//                 value='Delete'\r\n//                 className='Input'\r\n//                 />\r\n//          <input type='button'value='Add'/>\r\n//          </div>\r\n//         </form>\r\n//       </div>\r\n      \r\n//     )"]},"metadata":{},"sourceType":"module"}