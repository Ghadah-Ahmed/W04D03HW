{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\T1000\\\\codes\\\\Week04\\\\Day03\\\\W04D03HW\\\\day03-hw\\\\src\\\\component\\\\Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; //class Todo extends React.Component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo() {\n  _s();\n\n  const [count, setCount] = useState([]);\n  const [inputList, setInputList] = useState([{\n    do: ''\n  }]);\n\n  const handleInputChange = (e, index) => {\n    setCount(count.concat({\n      index: count.length,\n      count1: 0\n    }));\n    const {\n      name,\n      value\n    } = e.target;\n    const list = [...inputList];\n    list[index][name] = value;\n    setInputList(list);\n  };\n\n  const handleRemoveClick = index => {\n    const List = [...inputList];\n    List.splice(index, 1);\n    setInputList(List);\n  };\n\n  const handleAddClick = () => {\n    // setCount([...count],{id:count.length,count1:0})\n    //setCount(count.concat({index:count.length,count1:0}))\n    setInputList([...inputList, {\n      do: ''\n    }]);\n  };\n\n  const addCount = index => {\n    setCount(count.map(e => {\n      if (e.index === index) e.count1++;\n      return e;\n    }));\n  };\n\n  const subCount = index => {\n    console.log(\"_--\");\n    setCount(count.map(e => {\n      if (e.index === index) e.count1--;\n      return e;\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 8\n    }, this), inputList.map((x, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \" What needs to be done ?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"do\",\n            value: x.do,\n            placeholder: \"Enter your work..\",\n            onChange: e => handleInputChange(e, i)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-box\",\n          children: [inputList.length - 1 === i && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add\",\n            onClick: handleAddClick,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), inputList.length !== 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"rem\",\n            onClick: () => handleRemoveClick(i),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 42\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addCount(i),\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => subCount(i),\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 30\n      },\n      children: JSON.stringify(inputList)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Todo, \"Hm3QTesg+VKMV3eJxhrrzxaYKps=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["C:/Users/DELL/Desktop/T1000/codes/Week04/Day03/W04D03HW/day03-hw/src/component/Todo.js"],"names":["React","useState","Todo","count","setCount","inputList","setInputList","do","handleInputChange","e","index","concat","length","count1","name","value","target","list","handleRemoveClick","List","splice","handleAddClick","addCount","map","subCount","console","log","x","i","marginTop","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n\r\n//class Todo extends React.Component\r\n function Todo(){\r\n    \r\n   const[count,setCount] =useState([]);\r\n\r\n  const [inputList, setInputList] = useState([{do:''}]);\r\n \r\n\r\n  const handleInputChange = (e, index) => {\r\n    setCount(count.concat({index:count.length,count1:0}))\r\n    const { name, value } = e.target;\r\n    const list = [...inputList];\r\n    list[index][name] = value;\r\n    setInputList(list);\r\n     \r\n     \r\n     \r\n  };\r\n\r\n\r\nconst handleRemoveClick =index=>{\r\n    const List=[...inputList];\r\n    List.splice(index,1)\r\n    setInputList(List );\r\n}\r\n\r\n\r\nconst handleAddClick=()=>{\r\n    // setCount([...count],{id:count.length,count1:0})\r\n     //setCount(count.concat({index:count.length,count1:0}))\r\n    setInputList([...inputList,{do:''}])\r\n\r\n    \r\n\r\n}\r\n\r\nconst addCount=(index)=>{\r\n    \r\n    \r\n setCount(count.map((e)=> {\r\n\r\nif(e.index===index)\r\ne.count1++\r\nreturn e\r\n }))\r\n} \r\n\r\n\r\nconst subCount=(index)=>{\r\n    console.log(\"_--\")\r\n    setCount(count.map((e)=> {\r\n     \r\n        if(e.index===index)\r\n        e.count1--\r\n        return e\r\n         }))\r\n\r\n}\r\n\r\n  return (\r\n\r\n\r\n    <div className=\"App\">\r\n       <h2>Todo</h2>\r\n      {inputList.map((x, i) => {\r\n        return (\r\n          <div className=\"box\">\r\n\r\n          <label>\r\n          <hr/>\r\n          <h3> What needs to be done ?</h3>\r\n             \r\n            <input\r\n              name=\"do\"\r\n              value={x.do}\r\n              placeholder='Enter your work..'\r\n              onChange={e =>  handleInputChange(e,i)}\r\n            />\r\n            </label>\r\n            <div className=\"btn-box\">\r\n            {inputList.length - 1 === i && \r\n            <button className='add' onClick={handleAddClick}>Add</button>}\r\n              {inputList.length !== 1 && <button className=\"rem\" \r\n              \r\n              onClick={()=>handleRemoveClick(i)}>Remove</button>}\r\n              \r\n               \r\n              {<button onClick={()=>addCount(i)} >+</button>}\r\n               <span></span>\r\n              {<button onClick={()=>subCount(i)}>-</button>}\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n      <div style={{ marginTop: 30 }}>{JSON.stringify(inputList)} \r\n      \r\n      </div>\r\n    \r\n    \r\n    </div>\r\n  );\r\n}\r\n     \r\n  \r\n\r\nexport default Todo;\r\n \r\n "]},"metadata":{},"sourceType":"module"}